def largestSumAfterKNegations(self, nums, k):
    """
    :type nums: List[int]
    :type k: int
    :rtype: int
    """
    # sort the list
    # loop through the list
    # try to make as many elements as possible positive starting from the smallest negative numbers
    # if k is even after changing the negative numbers
        # return the sum of the list
    # else if k is odd
        # makes the smallest number negative
    # return the sum of the list
    nums.sort()
    # get number of negative numbers
    numNegatives = len([x for x in nums if x < 0])
    
    if k < numNegatives:
        # make the smallest k numbers positive
        for i in range(k):
            nums[i] = -nums[i] 
    else: # k >= numNegs
        k -= numNegatives # make everything positive first
        nums = [abs(x) for x in nums]
        # if array contains 0
        if 0 in nums or k % 2 == 0:
            # done, the rest of the ks go into the 0 or can be evenly cancelled
            pass
        else:
            # invert the smallest since I can cancel everythin
            nums.sort()
            nums[0] = -nums[0]
            
    return sum(nums)

nums = [-4,-6,9,-2,2]
print(largestSumAfterKNegations(any, nums, 4))
        